// 定义项目 API 的 proto 文件 可以同时描述 gRPC 和 HTTP API
// protobuf 文件参考:
//  - https://developers.google.com/protocol-buffers/
syntax = "proto3";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/empty.proto";

// package 命名使用 {appid}.{version} 的方式, version 形如 v1, v2 ..
package service.v1;

option go_package = "api";
option (gogoproto.goproto_getters_all) = false;

message LoginReq {
    //帐号
    string account  = 1 [(gogoproto.moretags) = 'form:"account" validate:"required"'];
    //密码
    string password = 2 [(gogoproto.moretags) = 'form:"password" validate:"required"'];
    //保存密码 保存：1，不保存：2
    string save     = 3 [(gogoproto.moretags) = 'form:"save" validate:"required"'];
}
message LoginResp {
    //令牌
    string accessToken = 1 [(gogoproto.jsontag) = 'access_token'];
    //密钥
    string randomKey = 2 [(gogoproto.jsontag) = 'randomKey'];
    //结果
    string result = 3 [(gogoproto.jsontag) = 'result'];
}

message RegisterReq {

    string account = 1 [(gogoproto.moretags) = 'form:"account" validate:"required"'];

    string password = 2 [(gogoproto.moretags) = 'form:"password" validate:"required"'];
}

message RegisterResp {
  string result = 1 [(gogoproto.jsontag) = 'result'];
}

message UserInfoReq {
    int64 userId = 1 [(gogoproto.moretags) = 'form:"userId" validate:"required"'];
}

message UserInfoResp {
  string avatar     = 1 [(gogoproto.jsontag) = 'avatar'];
  string account    = 2 [(gogoproto.jsontag) = 'account'];
  string name       = 3 [(gogoproto.jsontag) = 'name'];
  string birthday   = 4 [(gogoproto.jsontag) = 'birthday'];
  string sex        = 5 [(gogoproto.jsontag) = 'sex'];
  string email      = 6 [(gogoproto.jsontag) = 'email'];
  string phone      = 7 [(gogoproto.jsontag) = 'phone'];
  string deptId     = 8 [(gogoproto.jsontag) = 'deptId'];
  int32  status     = 9 [(gogoproto.jsontag) = 'status'];
  string createTime = 10[(gogoproto.jsontag) = 'createTime'];
}


service Account {
  // `method:"POST"`
  rpc Ping(.google.protobuf.Empty) returns (.google.protobuf.Empty);
  //用户登录
  // `method:"POST"`
  rpc Login(LoginReq) returns (LoginResp);
  //用户注册
  // `method:"POST"`
  rpc Register(RegisterReq) returns (RegisterResp);
  //用户信息
  // `method:"POST"`
  rpc UserInfo(UserInfoReq) returns (UserInfoResp);
}


message NewTokenReq {
    int64 userId = 1 [(gogoproto.moretags) = 'form:"userId" validate:"required"'];

    // 操作人
    string operator = 2 [(gogoproto.moretags) = 'form:"operator" validate:"required"'];

    //过期时间
    int64 expire = 3 [(gogoproto.moretags) = 'form:"expire" validate:"required"'];
}
message NewTokenResp {
    // 授予的 token
    string accessToken = 1 [(gogoproto.jsontag) = 'access_token'];

    // 授予token唯一对应的randomKey
    string randomKey = 2 [(gogoproto.jsontag) = 'randomKey'];
}

message VerifyTokenReq {
    // 授予的 token
    string accessToken = 1 [(gogoproto.jsontag) = 'access_token'];
}
message VerifyTokenResp {
    int64 userId = 1 [(gogoproto.jsontag) = 'userId'];

    string randomKey = 2 [(gogoproto.jsontag) = 'randomKey'];
}

service Token {
    rpc Ping (.google.protobuf.Empty) returns (.google.protobuf.Empty);
    // Request for a token for upload.
    // `method:"POST" internal:"true"`
    rpc Request (NewTokenReq) returns (NewTokenResp);

    // `method:"POST" internal:"true"`
    rpc Verify (VerifyTokenReq) returns (VerifyTokenResp);
}



